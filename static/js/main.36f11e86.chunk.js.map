{"version":3,"sources":["assets/videos/herovideo.mp4","assets/images/A.png","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","components/ResponsiveNavbar/index.js","components/HeroSection/HeroElements.js","components/ScrollButton/ButtonElements.js","components/ScrollButton/index.js","components/HeroSection/index.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SidebarContainer","styled","aside","isOpen","CloseIcon","FaTimes","Icon","div","SidebarWrapper","SidebarMenu","ul","SidebarLink","Link","SideBtnWrap","SidebarBtnLink","a","Sidebar","toggleMenu","onClick","to","href","target","Nav","nav","NavContainer","NavLogo","NavLogoIcon","img","MobileIcon","NavMenu","NavItem","li","NavLinks","ScrollLink","NavBtn","NavBtnLink","Navbar","src","require","ResponsiveNavbar","useState","setIsOpen","HeroContainer","HeroBg","VideoBg","video","HeroContent","HeroH1","h1","p","BtnWrapper","Btn","RouteBtn","Arrow","Button","title","direction","route","KeyboardArrowDownRounded","fontSize","KeyboardArrowUpRounded","ArrowForwardIosRounded","HeroSection","autoPlay","loop","muted","Video","type","style","color","background","padding","borderRadius","display","Home","App","className","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36f11e86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/herovideo.f32d6aba.mp4\";","module.exports = __webpack_public_path__ + \"static/media/A.d05dc66b.png\";","import styled from \"styled-components\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nexport const SidebarContainer = styled.aside`\n  position: fixed;\n  z-index: 999;\n  width: 100%;\n  height: 100%;\n  background: rgba(250, 55, 55);\n  display: grid;\n  align-items: center;\n  top: 0;\n  left: 0;\n  transition: 0.3s ease-in-out;\n  opacity: ${({ isOpen }) => (isOpen ? \"95%\" : \"0\")};\n  top: ${({ isOpen }) => (isOpen ? \"0\" : \"-100%\")};\n`;\n\nexport const CloseIcon = styled(FaTimes)`\n  color: white;\n`;\n\nexport const Icon = styled.div`\n  position: absolute;\n  top: 1.2rem;\n  right: 1.5rem;\n  background: transparent;\n  font-size: 2rem;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const SidebarWrapper = styled.div`\n  color: white;\n`;\n\nexport const SidebarMenu = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(6, 80px);\n  text-align: center;\n\n  @media screen and (max-width: 480px) {\n    grid-template-rows: repeat(6, 60px);\n  }\n`;\n\nexport const SidebarLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  text-decoration: none;\n  list-style: none;\n  transition: 0.2s ease-in-out;\n  text-decoration: none;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    color: #bf0101;\n    transition: 0.2s ease-in-out;\n  }\n`;\n\nexport const SideBtnWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SidebarBtnLink = styled.a`\n  border-radius: 50px;\n  background: black;\n  white-space: nowrap;\n  padding: 16px 64px;\n  color: white;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in;\n    background: #ff9595;\n    color: #010606;\n  }\n`;\n","import React from \"react\";\nimport {\n  SidebarContainer,\n  Icon,\n  CloseIcon,\n  SidebarWrapper,\n  SidebarMenu,\n  SidebarLink,\n  SideBtnWrap,\n  SidebarBtnLink,\n} from \"./SidebarElements\";\n\nconst Sidebar = ({ isOpen, toggleMenu }) => {\n  return (\n    <SidebarContainer isOpen={isOpen} onClick={toggleMenu}>\n      <Icon onClick={toggleMenu}>\n        <CloseIcon />\n      </Icon>\n      <SidebarWrapper>\n        <SidebarMenu>\n          <SidebarLink to=\"home\">Home</SidebarLink>\n          <SidebarLink to=\"about\">About</SidebarLink>\n          <SidebarLink to=\"portfolio\">Portfolio</SidebarLink>\n          <SidebarLink to=\"contact\">Contact</SidebarLink>\n        </SidebarMenu>\n        <SideBtnWrap>\n          <SidebarBtnLink href=\"https://github.com/anwachuku15\" target=\"_blank\">\n            Github\n          </SidebarBtnLink>\n        </SideBtnWrap>\n      </SidebarWrapper>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Link as ScrollLink } from \"react-scroll\";\n\nexport const Nav = styled.nav`\n  background: transparent;\n  height: 80px;\n  margin-top: -80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n\n  @media screen and (max-width: 960px) {\n    transition: 0.8 all ease;\n  }\n`;\n\nexport const NavContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 80px;\n  z-index: 1;\n  width: 100%;\n  padding: 0 24px;\n  max-width: 1100px;\n`;\n\nexport const NavLogo = styled(Link)`\n  color: red;\n  justify-self: flex-start;\n  cursor: pointer;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  margin-left: 24px;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nexport const NavLogoIcon = styled.img`\n  object-fit: contain;\n  max-height: 50px;\n`;\n\nexport const MobileIcon = styled.div`\n  display: none;\n  color: white;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 60%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.ul`\n  display: flex;\n  align-items: center;\n  list-style: none;\n  text-align: center;\n  margin-right: -22px;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavItem = styled.li`\n  height: 80px;\n`;\n\nexport const NavLinks = styled(ScrollLink)`\n  color: white;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n\n  &.active {\n    border-bottom: 3px solid red;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled.a`\n  border-radius: 50px;\n  background: #fa3737;\n  white-space: nowrap;\n  padding: 10px 22px;\n  color: #010606;\n  font-size: 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #ff9595;\n    color: #010606;\n  }\n`;\n","import React from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport {\n  Nav,\n  NavContainer,\n  NavLogo,\n  NavLogoIcon,\n  MobileIcon,\n  NavMenu,\n  NavItem,\n  NavLinks,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\nconst Navbar = ({ toggleMenu }) => {\n  return (\n    <>\n      <Nav>\n        <NavContainer>\n          <NavLogo to=\"/\">\n            <NavLogoIcon src={require(\"../../assets/images/A.png\")} />\n          </NavLogo>\n          <MobileIcon onClick={toggleMenu}>\n            <FaBars />\n          </MobileIcon>\n\n          <NavMenu>\n            <NavItem>\n              <NavLinks to=\"/\">Home</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks to=\"about\">About</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks to=\"about\">Portfolio</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks to=\"about\">Contact</NavLinks>\n            </NavItem>\n          </NavMenu>\n\n          <NavBtn>\n            <NavBtnLink href=\"https://github.com/anwachuku15\" target=\"_blank\">\n              Github\n            </NavBtnLink>\n          </NavBtn>\n        </NavContainer>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport Sidebar from \"../Sidebar\";\nimport Navbar from \"../Navbar\";\n\nconst ResponsiveNavbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <Sidebar isOpen={isOpen} toggleMenu={toggleMenu} />\n      <Navbar toggleMenu={toggleMenu} />\n    </>\n  );\n};\n\nexport default ResponsiveNavbar;\n","import styled from \"styled-components\";\n\nexport const HeroContainer = styled.div`\n  background: #0c0c0c;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* padding: 0 30px; */\n  height: 800px;\n  position: relative;\n  z-index: 1;\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: linear-gradient(\n        180deg,\n        rgba(0, 0, 0, 0.2) 0%,\n        rgba(0, 0, 0, 0.6) 100%\n      ),\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, transparent 100%);\n    z-index: 2;\n  }\n`;\n\nexport const HeroBg = styled.div`\n  position: aboslute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const VideoBg = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  --o-object-fit: cover;\n  background: #232a34;\n`;\n\nexport const HeroContent = styled.div`\n  z-index: 3;\n  max-width: 1200px;\n  position: absolute;\n  padding: 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: \"center\";\n`;\n\nexport const HeroH1 = styled.h1`\n  color: white;\n  font-size: 48px;\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    font-size: 40px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 32px;\n  }\n`;\n\nexport const HeroP = styled.p`\n  margin-top: 24px;\n  color: white;\n  font-size: 24px;\n  text-align: center;\n  max-width: 600px;\n\n  @media screen and (max-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 18px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link as ScrollLink } from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  width: max-content;\n  align-self: center;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  padding: 6px 15px 8px 15px;\n  border-radius: 50px;\n  border: 2px solid white;\n  background-color: transparent;\n  transition: background-color 150ms, border 150ms, opacity 1s ease;\n  position: relative;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(201, 201, 201, 0.384);\n    border: 2px solid transparent;\n\n    align-items: center;\n  }\n`;\n\nexport const Btn = styled(ScrollLink)`\n  display: flex;\n  color: white !important;\n  text-decoration: none;\n  font-size: 18px;\n`;\n\nexport const RouteBtn = styled(Link)`\n  display: flex;\n  color: white !important;\n  text-decoration: none;\n  font-size: 20px;\n`;\n\nexport const Arrow = styled.div`\n  position: relative;\n  bottom: -3px;\n  margin-left: -20px;\n  color: transparent;\n  transition: all 200ms;\n\n  ${BtnWrapper}:hover & {\n    margin-left: 10px !important;\n    color: white;\n  }\n`;\n","import React from \"react\";\nimport { BtnWrapper, Btn, RouteBtn, Arrow } from \"./ButtonElements\";\nimport {\n  KeyboardArrowDownRounded,\n  KeyboardArrowUpRounded,\n  ArrowForwardIosRounded,\n} from \"@material-ui/icons\";\n\nconst Button = ({ title, direction, route }) => {\n  return (\n    <BtnWrapper>\n      {route ? (\n        <RouteBtn to={route}>{title}</RouteBtn>\n      ) : (\n        <Btn to=\"portfolio\">{title}</Btn>\n      )}\n      <Arrow>\n        {direction === \"down\" && <KeyboardArrowDownRounded fontSize=\"small\" />}\n        {direction === \"up\" && <KeyboardArrowUpRounded fontSize=\"small\" />}\n        {direction === \"forward\" && <ArrowForwardIosRounded fontSize=\"small\" />}\n      </Arrow>\n    </BtnWrapper>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport {\n  HeroContainer,\n  HeroBg,\n  VideoBg,\n  HeroContent,\n  HeroH1,\n} from \"./HeroElements\";\nimport Button from \"../ScrollButton\";\nimport Video from \"../../assets/videos/herovideo.mp4\";\n\nconst HeroSection = () => {\n  return (\n    <HeroContainer>\n      <HeroBg>\n        <VideoBg autoPlay loop muted src={Video} type=\"video/mp4\" />\n      </HeroBg>\n      <HeroContent>\n        <HeroH1>\n          Hello, I'm{\" \"}\n          <HeroH1\n            style={{\n              color: \"rgb(225 21 21)\",\n              background: \"rgba(255, 255, 255, 0.69)\",\n              padding: \"1px 5px\",\n              borderRadius: 10,\n              display: \"inline-block\",\n            }}\n          >\n            Andrew Nwachuku\n          </HeroH1>\n          .\n        </HeroH1>\n        <HeroH1>I'm a full-stack web developer.</HeroH1>\n        <Button title=\"See my work!\" direction=\"down\" />\n      </HeroContent>\n    </HeroContainer>\n  );\n};\n\nexport default HeroSection;\n","import React from \"react\";\nimport HeroSection from \"../../components/HeroSection\";\n\nconst Home = () => {\n  return (\n    <>\n      <HeroSection />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport ResponsiveNavbar from \"./components/ResponsiveNavbar\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <ResponsiveNavbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}